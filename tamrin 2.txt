Report : philosophers dining problem.

در علوم کامپیوتر یک مسئله راجب طراحی هم روندی الگوریتم ها که برای نشان دادن تکنیک های همگام سازی و روش حل آن ها استفاده میشود
.
مسئله به اینگونه شرح میشود که پنج فیلسوف ساکت کنار یک میز قرار میگیرند و به تعداد هر پنج نفر یک کاسه ماکارونی وجود دارد و هر کدام فقط یک چنگال کنارشان دارد
هر فیلسوف باید به صورت متناوب فکر کند و بخورد ولی هر فیلسوف زمانی میتواند بخورد که دو چنگال به دست داشته باشد و هر چنگال فقط میتواند توسط یک فیلسوف
میتواند از هر دو چنگال استفاده کند که چنگال دیگری در توسط فیلسوف دیگر درحال استفاده نباشد بعد از اینکه خوردنش تمام شد باید چنگال روی میز گزاشته شود که 
دیگر افراد هم استفاده کنند
نکته مهم این است که یک فیلسوف فقط چنگال سمت راست یا چپ خود اگر موجود باشد استفاده کند و نمیتواند قبل از در اختیار گرفتن چنگال دوم خوردن را شروع کند
مقدار ماکارونی یا اشتهای فیلسوف ربطی به این مسئله ندارد.
مسئله بر این است که چگونه یک الگوریتمی را تعریف کنیم که دیگر هیچ فیلسوفی با خوردن مشکلی نداشته باشد

در گراف اگر چرخه ای نباشد بن بست نداریم و اگر باشد احتمال بنبست وجود دارد
(وقتی چند برنامه به یک منبع مشترک نیاز دارند این خطا در برنامه نویسی رخ میدهد)

راه حل : متد حاکمیت یعنی هر گارسون برای هر فیلسوفی که نیاز به برداشتن چنگال دوم داره باید تاییدیه صادر کند 

دروس مربوط با این مسئله : آزمایشگاه سیستم عامل - مباحث ویژه - آزمایشگاه پایگاه داده - آزمایشگاه شبکه های کامپیوتری «لابدا

نام گزارشدهنده تمرین : بهنام کردی کریم آبادی